# Generated by Django 5.2.6 on 2025-09-22 14:58

import django.db.models.deletion
import myinspectra.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CXRModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True)),
                ('model_file_path', models.CharField(help_text='Path to model weights', max_length=500)),
                ('confidence_stat_file_path', models.CharField(help_text='Path to confidence statistics', max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='CaseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('success_upload', models.BooleanField(default=False, help_text='Indicates whether the image was uploaded successfully')),
                ('success_process', models.BooleanField(default=False, help_text='Indicates whether the image was predicted successfully')),
                ('success_response', models.BooleanField(default=False, help_text='Indicates whether the response was received successfully')),
                ('model_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myinspectra.cxrmodel')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease_name', models.CharField(help_text='Disease name from API response', max_length=100)),
                ('prediction_value', models.FloatField(help_text='Raw prediction value from API')),
                ('balanced_score', models.FloatField(help_text='Balanced score from API')),
                ('thresholded_percentage', models.CharField(help_text="Thresholded percentage (e.g., '80%')", max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('case_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='myinspectra.caserequest')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('case_request', 'disease_name')},
            },
        ),
        migrations.CreateModel(
            name='Heatmap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heatmap_image', models.ImageField(upload_to=myinspectra.models.heatmap_upload_path)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('file_size', models.BigIntegerField(blank=True, help_text='Size in bytes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prediction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='heatmap', to='myinspectra.prediction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RawImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(editable=False, upload_to=myinspectra.models.raw_image_upload_path)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('file_size', models.BigIntegerField(blank=True, help_text='Size in bytes', null=True)),
                ('original_filename', models.CharField(blank=True, max_length=255)),
                ('content_type', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('case_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myinspectra.caserequest')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=100)),
                ('segment_image', models.ImageField(upload_to=myinspectra.models.segment_upload_path)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('file_size', models.BigIntegerField(blank=True, help_text='Size in bytes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('case_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='myinspectra.caserequest')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
